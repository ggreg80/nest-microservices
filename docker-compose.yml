version: "2"

services:
  rabbitmq:
    image: "bitnami/rabbitmq:3.8"
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/bitnami"
  api:
    build: "./api"
    image: "abdelhadinaimi/moon_api"
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
    environment:
      AMQ_HOST: rabbitmq
  user-management-service:
    build: "./user-management-service"
    image: "abdelhadinaimi/moon_user-service"
    restart: always
    depends_on:
      - rabbitmq
      - us-mongodb
    environment:
      AMQ_HOST: rabbitmq
      AMQ_USER: user_service
      AMQ_PASSWORD: user_service
  media-service:
    build: "./media-service"
    image: "abdelhadinaimi/moon_media-service"
    restart: always
    depends_on:
      - rabbitmq
      - ms-mongodb
    environment:
      AMQ_HOST: rabbitmq
      AMQ_USER: media_service
      AMQ_PASSWORD: media_service
  ms-mongodb:
    image: mongo
    volumes:
      - "ms-mongodb_data:/data/db"
      - "./ms-mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: usersDB
      MONGO_NON_ROOT_USERNAME: users_user
      MONGO_NON_ROOT_PASSWORD: users_pass
  us-mongodb:
    image: mongo
    volumes:
      - "us-mongodb_data:/data/db"
      - "./us-mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro"
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: mediasDB
      MONGO_NON_ROOT_USERNAME: medias_user
      MONGO_NON_ROOT_PASSWORD: medias_pass
volumes:
  rabbitmq_data:
    driver: local
  ms-mongodb_data:
    driver: local
  us-mongodb_data:
    driver: local
